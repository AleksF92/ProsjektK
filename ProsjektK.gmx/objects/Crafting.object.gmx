<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize crafting
enum INGREDIENT { ITEM, AMOUNT };
enum RECIPE { NAME, DESCRIPTION, INGREDIENTS };
enum DRAW_CRAFT { TEXT, SELECTED };
recipes = ds_list_create();
rScroll = 0;

drawData = ds_list_create();
rw = 200;
rh = 16;
offset = 5;
colFrame = c_white;
colText = c_black;
colSelected = c_yellow;

//Test recipes
crafting_recipe_add("HEATER");
crafting_recipe_add("COOLER");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Event handling
if (visible) {
    var x1 = x + offset;
    var y1 = y + offset;

    //Clear draw list
    for (var d = 0; d &lt; ds_list_size(drawData); d++) {
        var draw = drawData[| d];
        ds_list_destroy(draw);
    }
    ds_list_clear(drawData);
    
    //Create new draw list
    for (var r = rScroll; r &lt; ds_list_size(recipes); r++) {
        //Get info
        var recipe = recipes[| r];
        var rName = recipe[| RECIPE.NAME];
        var rDesc = recipe[| RECIPE.DESCRIPTION];
        var rIngredients = recipe[| RECIPE.INGREDIENTS];
        var craftText = rName + "#" + rDesc + "#";
        
        //Get ingredient info
        for (var i = 0; i &lt; ds_list_size(rIngredients); i++) {
            var ingredient = rIngredients[| i];
            var iItem = ingredient[| INGREDIENT.ITEM];
            inventory_item_info(iItem);
            var iName = Inventory.iInfo[| INFO.NAME];
            var iAmount = ingredient[| INGREDIENT.AMOUNT];
            var iCount = inventory_item_count(iItem);
            
            craftText += "# - " + iName + " (" + string(iCount) + " / " + string(iAmount) + ")";
        }
        
        //Check mouse state
        var selected = false;
        var mx = mouse_x - view_xview[0];
        var my = mouse_y - view_yview[0];
        var frameH = string_height(craftText) + offset;
        if (mx &gt;= x1 &amp;&amp; mx &lt;= x1 + rw)
        &amp;&amp; (my &gt;= y1 &amp;&amp; my &lt;= y1 + frameH) {
            selected = true;
            if (mouse_check_button_released(mb_left)) {
                //Craft
                crafting_recipe_craft(recipe);
            }
        }
        
        //Add new draw data
        var draw = ds_list_create();
        ds_list_add(draw, craftText);
        ds_list_add(draw, selected);
        ds_list_add(drawData, draw);
        
        //Update y1
        y1 += frameH + offset;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw crafting interface

//Draw all recipes
var x1 = x + offset;
var y1 = y + offset;

for (var d = 0; d &lt; ds_list_size(drawData); d++) {
    //Get info
    var draw = drawData[| d];
    var dText = draw[| DRAW_CRAFT.TEXT];
    var dSelected = draw[| DRAW_CRAFT.SELECTED];
    var frameH = string_height(dText) + offset;

    //Draw frame
    var c = colFrame;
    if (dSelected) { c = colSelected; }
    draw_set_alpha(0.5);
    draw_rectangle_colour(x1, y1, x1 + rw, y1 + frameH, c, c, c, c, false);
    draw_set_alpha(1);
    
    //Draw craft text
    draw_text_colour(x1 + offset, y1, dText, colText, colText, colText, colText, 1);
    
    //Update y1
    y1 += frameH + offset;
    //show_debug_message("Drawing:##" + dText);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
