<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize action object
MAX_DIST = 32;

selected = false;
inReach = false;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle mouse events

selected = false;
var x1 = x - sprite_get_xoffset(sprite_index);
var y1 = y - sprite_get_yoffset(sprite_index);

if (mouse_x &gt;= x1 &amp;&amp; mouse_x &lt;= x1 + sprite_width) {
    if (mouse_y &gt;= y1 &amp;&amp; mouse_y &lt;= y1 + sprite_height) {
        if (!Inventory.visible || (Inventory.iFocusX == -1 || Inventory.iFocusY == -1)) {
            //Mouse inside
            //Check if I'm closest to the player
            var nearest = true;
            var dist = distance_to_point(Player.x, Player.y);
            
            with (ActionObject) {
                if (id != other.id &amp;&amp; instance_id == other.instance_id) {
                    if (selected) {
                        var tmpDist = distance_to_point(Player.x, Player.y);
                        if (tmpDist &lt; dist) {
                            //Other is further away
                            nearest = false;
                            break;
                        }
                        else {
                            //This is further away
                            selected = false;
                        }
                    }
                }
            }
            
            //Set selected state
            selected = nearest;
            
            if (selected) {
                //Calculate real distance
                var distX = x - Player.x;
                var distY = y - Player.y;
                distX = max(distX, -distX);
                distY = max(distY, -distY);
                distX -= MAX_DIST / 2;
                var distReal = sqrt(power(distX, 2) + power(distY, 2));
                
                inReach = false;
                if (distReal &lt;= MAX_DIST) {
                    inReach = true;
                }
            }
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw selection
//WARNING: Child must draw self
if (selected) {
    if (inReach) {
        draw_sprite(sprite_index, 2, x, y);
    }
    else {
        draw_sprite(sprite_index, 1, x, y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
